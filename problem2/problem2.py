"""
Title: problem2.py
Problem: Each new term in the Fibonacci sequence is generated by adding
            the previous two terms. By starting with 1 and 2, the first
            10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89. By
            condisdering the terms in the Fibonacci sequence whose value
            does not exceed 4 million, find the sum of the even-valued
            terms.
"""
import numpy as np


def fibonacci():
    """
    Generate the first n terms in the Fibonacci sequence. Uses dynamic
    programming instead of recursion for time efficiency. Also only
    stores three values instead of the entire sequence, since we only
    need the previous two values to get the next one.
    """
    a = 1
    b = 2
    fibSum = 0
    while b < 4e6:
        if b % 2 == 0:
            fibSum += b
        c = a + b
        a = b
        b = c
    return fibSum 

print(fibonacci())
